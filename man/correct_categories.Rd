% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/correct_categories.R
\name{correct_categories}
\alias{correct_categories}
\title{Match strings with a pre-defined set of strings}
\usage{
correct_categories(to_be_corrected, correct_terms)
}
\arguments{
\item{to_be_corrected}{vector containing the strings to be corrected}

\item{correct_terms}{string vector containing the correct terms}

\item{max_dist}{parameter passed down to stringdist::amatch() with a default}

\item{method}{parameter passed down to stringdist::amatch() with a default}

\item{...}{further parameters to be passed down to stringdist::amatch()}
}
\value{
A corrected string vector that can only contain the correct terms
}
\description{
Correct strings to pre-defined strings. This is a wrapper for stringdist approimate string matching, where certain parameters are preset, and can be used easily in a tidyverse pipe. Using cosine matching to disregard word order.
}
\examples{
reasons <- c("sample characteristics",
             "publication type",
             "manipulation",
             "other")

# Create category names with typos
reasons_with_typo <- c("simple characteristisc",
                       "publication t",
                       "manuplation",
                       "o",
                       "publicaton type")

# Create a dataset with random correct and incorrect categories in the "reason" column
df_with_typos <-
                 workaholism_pubmed \%>\%
                 mutate(decision = sample(c(0,1), size = nrow(.), replace = TRUE),
                        reason = if_else(decision == 0,
                                         NA_character_,
                         # Mix correct and incorrect categories
                                         sample(c(reasons, reasons_with_typo),
                                                size = nrow(.),
                                                replace = TRUE)
                                 )
                 )

# The typos are corrected in a new column
mutate(df_with_typos, corrected_reason = correct_categories(reason, reasons))
}
